{"ast":null,"code":"var _jsxFileName = \"/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport SkillsList from './Components/SkillsList';\nimport Logins from './Components/Logins';\nimport Registration from './Components/Registration';\nimport Greeting from './Components/Greeting';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Get Token from local storage -- Need to figure out how to use JWT token for user session\n  // const initialToken = localStorage.getItem('token');\n  // Using user_id in localStorage to keep user loggedd in\n  const initialUser = localStorage.getItem('user_id'); // States\n\n  const [inputText, setInputText] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [session, setSession] = useState({\n    auth: false,\n    token: \"\",\n    user_id: initialUser,\n    refresh: false\n  }); // Considering using object deconstruction\n\n  var refresh = session.refresh;\n  var isLoggedIn = session.user_id ? true : false; // call-back function for Logins component - Updates session and refresh invokes useEffect to run\n\n  const userAuth = data => {\n    setSession({\n      auth: true,\n      token: data.token,\n      user_id: data.user_id,\n      refresh: !session.refresh\n    });\n    console.log('User logged in successfully!');\n  }; // Resets session state to default, removes user_id from localStorage\n\n\n  const logoutHandler = () => {\n    if (isLoggedIn) {\n      setSession({\n        auth: false,\n        token: \"\",\n        user_id: \"\"\n      });\n      localStorage.removeItem(\"user_id\");\n    }\n  }; // Toggles session.refresh to invoke useEffect to run again (Might not be needed?)\n\n\n  const refreshHandler = () => {\n    setSession({ ...session,\n      refresh: !session.refresh\n    });\n  }; // If user logged in, each skill has the user_id assigned when created, we can get user specific skills \n  // using that id. (Stored in localStorage for skills to show up in case of page refresh)\n\n\n  useEffect(() => {\n    console.log(\"USE EFFECT RUNNING!!\");\n\n    if (session.user_id) {\n      setSession({ ...session,\n        auth: true\n      });\n    }\n\n    const fetchSkills = async () => {\n      const response = await axios.get(`http://localhost:3001/api/users/fetchSkills?user_id=${initialUser}`);\n      console.log(\"response: \", response.data);\n      setSkills(response.data);\n    };\n\n    fetchSkills();\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        logoutHandler: logoutHandler,\n        session: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"app-name\",\n              children: \"Level Up App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              inputText: inputText,\n              setInputText: setInputText,\n              skills: skills,\n              setSkills: setSkills,\n              session: session,\n              setSession: setSession,\n              refreshHandler: refreshHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), \",\", /*#__PURE__*/_jsxDEV(SkillsList, {\n              isLoggedIn: isLoggedIn,\n              skills: skills,\n              setSkills: setSkills,\n              session: session,\n              setSession: setSession,\n              refreshHandler: refreshHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 24\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          component: Registration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Logins, {\n            userAuth: userAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DhcIlsL7rKGjm7coJZUL4Huujj4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/App.js"],"names":["React","useEffect","useState","Form","Navbar","SkillsList","Logins","Registration","Greeting","BrowserRouter","Router","Switch","Route","Redirect","axios","App","initialUser","localStorage","getItem","inputText","setInputText","skills","setSkills","session","setSession","auth","token","user_id","refresh","isLoggedIn","userAuth","data","console","log","logoutHandler","removeItem","refreshHandler","fetchSkills","response","get"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport SkillsList from './Components/SkillsList';\nimport Logins from './Components/Logins';\nimport Registration from './Components/Registration';\nimport Greeting from './Components/Greeting';\n\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\n\n\n\nfunction App() {\n  // Get Token from local storage -- Need to figure out how to use JWT token for user session\n  // const initialToken = localStorage.getItem('token');\n  // Using user_id in localStorage to keep user loggedd in\n  const initialUser = localStorage.getItem('user_id');\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [session, setSession] = useState({auth: false, token:\"\", user_id:initialUser, refresh: false})\n\n  // Considering using object deconstruction\n  var refresh  = session.refresh;\n  var isLoggedIn = session.user_id ? true: false\n\n  // call-back function for Logins component - Updates session and refresh invokes useEffect to run\n  const  userAuth = (data) => {\n    setSession({\n      auth:true,\n      token: data.token,\n      user_id: data.user_id,\n      refresh: !session.refresh,\n    })\n    console.log('User logged in successfully!')\n    \n  }\n\n\n// Resets session state to default, removes user_id from localStorage\n  const logoutHandler = () => {\n    if (isLoggedIn) {\n      setSession({auth: false, token:\"\", user_id:\"\"});\n      localStorage.removeItem(\"user_id\");\n    }\n\n  }\n  \n // Toggles session.refresh to invoke useEffect to run again (Might not be needed?)\n  const refreshHandler = () => {\n    setSession({...session, refresh: !session.refresh})\n  }\n\n  // If user logged in, each skill has the user_id assigned when created, we can get user specific skills \n  // using that id. (Stored in localStorage for skills to show up in case of page refresh)\n  useEffect(() => {\n    console.log(\"USE EFFECT RUNNING!!\")\n    if (session.user_id) {\n      setSession({...session, auth:true})\n    }\n    const fetchSkills = async () => {\n      const response = await axios.get(`http://localhost:3001/api/users/fetchSkills?user_id=${initialUser}`);\n      console.log(\"response: \", response.data)\n      setSkills(response.data)\n    }\n    fetchSkills();\n   \n\n    \n  },[refresh] );\n  \n  \n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar logoutHandler={logoutHandler} session={session}/>\n        \n        <Switch>\n        \n        {isLoggedIn && <Route path='/' exact>\n          <div className='app-container'>\n          <h1 className='app-name'>Level Up App</h1>\n\n            <Form \n              inputText={inputText} \n              setInputText={setInputText} \n              skills={skills} \n              setSkills={setSkills}\n              session={session}\n              setSession={setSession} \n              refreshHandler={refreshHandler}\n            />,\n            <SkillsList \n              isLoggedIn={isLoggedIn} \n              skills={skills} \n              setSkills={setSkills}\n              session={session}\n              setSession={setSession} \n              refreshHandler={refreshHandler}\n            />\n          </div>\n          </Route>}\n          {!isLoggedIn &&<Route path='/' exact>\n            <Greeting />\n          </Route> }\n          <Route path='/register' component={Registration} />\n          <Route path='/login'>\n            <Logins \n              userAuth={userAuth} \n            />\n          </Route>\n          <Route path='*'>\n            <Redirect to ='/' />\n          </Route>\n            \n          \n        </Switch>\n        \n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}