{"ast":null,"code":"var _jsxFileName = \"/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/Components/Login.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"./LoginStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hidePassword: true,\n      error: null,\n      errorOpen: false\n    };\n\n    this.errorClose = e => {\n      this.setState({\n        errorOpen: false\n      });\n    };\n\n    this.handleChange = name => e => {\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.showPassword = () => {\n      this.setState(prevState => ({\n        hidePassword: !prevState.hidePassword\n      }));\n    };\n\n    this.isValid = () => {\n      if (this.state.email === \"\") {\n        return false;\n      } else if (this.state.password === \"\") {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.loginHandler = e => {\n      e.preventDefault();\n      const loginInfo = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post(\"http://localhost:3001/api/users/login\", loginInfo).then(res => {\n        console.log(res.data);\n        this.state.props.setState({\n          auth: true,\n          token: res.data.token\n        });\n        console.log(this.state);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            className: classes.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: () => this.loginHandler // add on submit handler\n          ,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              className: classes.labels,\n              children: \"e-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              className: classes.inputs,\n              disableUnderline: true,\n              onChange: this.handleChange(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              className: classes.labels,\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              autoComplete: \"password\",\n              className: classes.inputs,\n              disableUnderline: true,\n              onChange: this.handleChange(\"password\"),\n              type: this.state.hidePassword ? \"password\" : \"input\",\n              endAdornment: this.state.hidePassword ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityOffTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !this.isValid(),\n            disableRipple: true,\n            fullWidth: true,\n            variant: \"outlined\",\n            className: classes.button,\n            type: \"submit\",\n            onClick: this.loginHandler,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Don't have an account yet?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(login)(Login);","map":{"version":3,"sources":["/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/Components/Login.js"],"names":["React","Component","withStyles","login","InputAdornment","CssBaseline","Paper","Avatar","FormControl","Input","InputLabel","Button","PeopleAltIcon","Snackbar","SnackbarContent","IconButton","ErrorIcon","VisibilityTwoToneIcon","VisibilityOffTwoToneIcon","CloseIcon","Link","axios","Login","state","email","password","hidePassword","error","errorOpen","errorClose","e","setState","handleChange","name","target","value","showPassword","prevState","isValid","loginHandler","preventDefault","loginInfo","post","then","res","console","log","data","props","auth","token","catch","render","classes","main","paper","avatar","icon","form","labels","inputs","passwordEye","button"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"./LoginStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\n\n\nclass Login extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        hidePassword: true,\n        error: null,\n        errorOpen: false\n      };\n\n    errorClose = e => {\n    this.setState({\n        errorOpen: false\n    });\n    };\n\n    handleChange = name => e => {\n    this.setState({\n        [name]: e.target.value\n    });\n    };\n\n    showPassword = () => {\n        this.setState(prevState => ({ hidePassword: !prevState.hidePassword }));\n      };\n    \n    isValid = () => {\n        if (this.state.email === \"\") {\n            return false;\n        } else if (this.state.password === \"\") {\n            return false;\n        }\n        return true;\n        };\n    loginHandler = e => {\n        e.preventDefault();\n        const loginInfo = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        axios.post(\"http://localhost:3001/api/users/login\", loginInfo)\n            .then((res) => {\n                console.log(res.data);\n                this.state.props.setState({auth:true, token:res.data.token})\n                console.log(this.state)\n            }).catch((error) => {\n                console.log(error)\n            })\n    }\n\n render() {\n    const { classes } = this.props;\n    return (\n        <div className={classes.main}>\n            <CssBaseline /> \n\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <PeopleAltIcon className={classes.icon} />\n                </Avatar>\n\n                <form\n                    className={classes.form}\n                    onSubmit={() => this.loginHandler}\n                    // add on submit handler\n                >\n                    <FormControl required fullWidth margin=\"normal\">\n                        <InputLabel htmlFor=\"email\" className={classes.labels}>\n                            e-mail\n                        </InputLabel>\n                        <Input\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            className={classes.inputs}\n                            disableUnderline={true}\n                            onChange={this.handleChange(\"email\")}\n                        />\n                    </FormControl>\n                    <FormControl required fullWidth margin=\"normal\">\n                        <InputLabel htmlFor=\"password\" className={classes.labels}>\n                            password\n                        </InputLabel>\n                        <Input\n                            name=\"password\"\n                            autoComplete=\"password\"\n                            className={classes.inputs}\n                            disableUnderline={true}\n                            onChange={this.handleChange(\"password\")}\n                            type={this.state.hidePassword ? \"password\" : \"input\"}\n                            endAdornment={\n                            this.state.hidePassword ? (\n                                <InputAdornment position=\"end\">\n                                <VisibilityOffTwoToneIcon\n                                    fontSize=\"default\"\n                                    className={classes.passwordEye}\n                                    onClick={this.showPassword}\n                                />\n                                </InputAdornment>\n                            ) : (\n                                <InputAdornment position=\"end\">\n                                <VisibilityTwoToneIcon\n                                    fontSize=\"default\"\n                                    className={classes.passwordEye}\n                                    onClick={this.showPassword}\n                                />\n                                </InputAdornment>\n                            )\n                            }\n                        />\n                    </FormControl>\n\n                    <Button\n                        disabled={!this.isValid()}\n                        disableRipple\n                        fullWidth\n                        variant=\"outlined\"\n                        className={classes.button}\n                        type=\"submit\"\n                        onClick={this.loginHandler}\n                        >\n                        Log In\n                    </Button>\n                    <Link to='/register'>\n                        Don't have an account yet?\n                    </Link>\n                </form>\n            </Paper>\n        </div>\n      );\n }\n \n}\n\n\nexport default withStyles(login)(Login);"]},"metadata":{},"sourceType":"module"}