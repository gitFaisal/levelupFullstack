{"ast":null,"code":"var _jsxFileName = \"/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/Components/Logins.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"./LoginStyles\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\"; // Can turn this into a function to pass setSession down to it\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\",\n    hidePassword: true,\n    error: null,\n    errorOpen: false\n  });\n\n  const errorClose = e => {\n    setLoginInfo({\n      errorOpen: false\n    });\n  };\n\n  const handleChange = name => e => {\n    setLoginInfo({\n      [name]: e.target.value\n    });\n  };\n\n  const showPassword = () => {\n    setLoginInfo({\n      hidePassword: !loginInfo.hidePassword\n    });\n  };\n\n  const isValid = () => {\n    if (loginInfo.email === \"\") {\n      return false;\n    } else if (loginInfo.password === \"\") {\n      return false;\n    }\n\n    return true;\n  };\n\n  const loginHandler = e => {\n    e.preventDefault();\n    const userInfo = {\n      email: loginInfo.email,\n      password: loginInfo.password\n    };\n    console.log(\"Users info:\", userInfo);\n    axios.post(\"http://localhost:3001/api/users/login\", userInfo).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: () => this.loginHandler // add on submit handler\n        ,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"email\",\n            className: classes.labels,\n            children: \"e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"email\",\n            autoComplete: \"email\",\n            className: classes.inputs,\n            disableUnderline: true,\n            onChange: handleChange(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"password\",\n            className: classes.labels,\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            autoComplete: \"password\",\n            className: classes.inputs,\n            disableUnderline: true,\n            onChange: handleChange(\"password\"),\n            type: loginInfo.hidePassword ? \"password\" : \"input\",\n            endAdornment: loginInfo.hidePassword ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(VisibilityOffTwoToneIcon, {\n                fontSize: \"default\",\n                className: classes.passwordEye,\n                onClick: showPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                fontSize: \"default\",\n                className: classes.passwordEye,\n                onClick: showPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !isValid(),\n          disableRipple: true,\n          fullWidth: true,\n          variant: \"outlined\",\n          className: classes.button,\n          type: \"submit\",\n          onClick: loginHandler,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Don't have an account yet?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"LEegh34IjqcI+dmcC5ZTLTQnujw=\");\n\n_c = Login;\nexport default withStyles(login)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/Components/Logins.js"],"names":["React","useState","withStyles","login","Link","axios","InputAdornment","CssBaseline","Paper","Avatar","FormControl","Input","InputLabel","Button","PeopleAltIcon","VisibilityTwoToneIcon","VisibilityOffTwoToneIcon","Login","props","loginInfo","setLoginInfo","email","password","hidePassword","error","errorOpen","errorClose","e","handleChange","name","target","value","showPassword","isValid","loginHandler","preventDefault","userInfo","console","log","post","then","res","data","catch","classes","main","paper","avatar","icon","form","labels","inputs","passwordEye","button"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"./LoginStyles\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\n\n\n\n\n// Can turn this into a function to pass setSession down to it\nfunction Login ( props  ) {\n    const [loginInfo, setLoginInfo] = useState({\n        email: \"\",\n        password: \"\",\n        hidePassword: true,\n        error: null,\n        errorOpen: false\n    })\n   \n    const errorClose = e => {\n    setLoginInfo({\n        errorOpen: false\n    });\n    };\n\n    const handleChange = name => e => {\n    setLoginInfo({\n        [name] : e.target.value,\n        \n    });\n    };\n\n    const showPassword = () => {\n        setLoginInfo({ hidePassword: !loginInfo.hidePassword });\n      }; \n    \n    const isValid = () => {\n        if (loginInfo.email === \"\") {\n            return false;\n        } else if (loginInfo.password === \"\") {\n            return false;\n        }\n        return true;\n        };\n    const loginHandler = e => {\n        e.preventDefault();\n        const userInfo = {\n            email: loginInfo.email,\n            password: loginInfo.password\n        }\n        console.log(\"Users info:\",userInfo)\n        axios.post(\"http://localhost:3001/api/users/login\", userInfo)\n            .then((res) => {\n                console.log(res.data);\n            \n            }).catch((error) => {\n                console.log(error)\n            })\n    }\n\n \n    const { classes } = props;\n  \n    return (\n        <div className={classes.main}>\n            <CssBaseline /> \n\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <PeopleAltIcon className={classes.icon} />\n                </Avatar>\n\n                <form\n                    className={classes.form}\n                    onSubmit={() => this.loginHandler}\n                    // add on submit handler\n                >\n                    <FormControl required fullWidth margin=\"normal\">\n                        <InputLabel htmlFor=\"email\" className={classes.labels}>\n                            e-mail\n                        </InputLabel>\n                        <Input\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            className={classes.inputs}\n                            disableUnderline={true}\n                            onChange={handleChange(\"email\")}\n                        />\n                    </FormControl>\n                    <FormControl required fullWidth margin=\"normal\">\n                        <InputLabel htmlFor=\"password\" className={classes.labels}>\n                            password\n                        </InputLabel>\n                        <Input\n                            name=\"password\"\n                            autoComplete=\"password\"\n                            className={classes.inputs}\n                            disableUnderline={true}\n                            onChange={handleChange(\"password\")}\n                            type={loginInfo.hidePassword ? \"password\" : \"input\"}\n                            endAdornment={\n                            loginInfo.hidePassword ? (\n                                <InputAdornment position=\"end\">\n                                <VisibilityOffTwoToneIcon\n                                    fontSize=\"default\"\n                                    className={classes.passwordEye}\n                                    onClick={showPassword}\n                                />\n                                </InputAdornment>\n                            ) : (\n                                <InputAdornment position=\"end\">\n                                <VisibilityTwoToneIcon\n                                    fontSize=\"default\"\n                                    className={classes.passwordEye}\n                                    onClick={showPassword}\n                                />\n                                </InputAdornment>\n                            )\n                            }\n                        />\n                    </FormControl>\n\n                    <Button\n                        disabled={!isValid()}\n                        disableRipple\n                        fullWidth\n                        variant=\"outlined\"\n                        className={classes.button}\n                        type=\"submit\"\n                        onClick={loginHandler}\n                        >\n                        Log In\n                    </Button>\n                    <Link to='/register'>\n                        Don't have an account yet?\n                    </Link>\n                </form>\n            </Paper>\n        </div>\n      );\n \n \n}\n\n\nexport default withStyles(login)(Login);"]},"metadata":{},"sourceType":"module"}