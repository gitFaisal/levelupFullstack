{"ast":null,"code":"var _jsxFileName = \"/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport SkillsList from './Components/SkillsList';\nimport Logins from './Components/Logins';\nimport Registration from './Components/Registration';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [session, setSession] = useState({\n    auth: false,\n    token: \"\"\n  });\n  const {\n    isLoggedIn\n  } = session;\n  const {\n    token\n  } = session; // Refer to react docs for conditional learning\n  // call-back function for Logins component\n\n  const userAuth = data => {\n    setSession({\n      auth: true,\n      token: data.token\n    });\n    console.log('User logged in successfully!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"app-name\",\n              children: \"Level Up App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              inputText: inputText,\n              setInputText: setInputText,\n              skills: skills,\n              setSkills: setSkills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SkillsList, {\n              skills: skills,\n              setSkills: setSkills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          component: Registration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Logins, {\n            userAuth: userAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lncx2Q8PZUowJTZwg9gr9G4KBfs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/faisalmalik/Desktop/levelupFullstack/levelup/src/App.js"],"names":["React","useState","Form","Navbar","SkillsList","Logins","Registration","BrowserRouter","Router","Switch","Route","App","inputText","setInputText","skills","setSkills","session","setSession","auth","token","isLoggedIn","userAuth","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAGA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAsD,kBAAtD;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC;AAACiB,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,KAAK,EAAC;AAApB,GAAD,CAAtC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,OAAvB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYH,OAAlB,CAPa,CASb;AAEA;;AACA,QAAMK,QAAQ,GAAIC,IAAD,IAAU;AACzBL,IAAAA,UAAU,CAAC;AACTC,MAAAA,IAAI,EAAC,IADI;AAETC,MAAAA,KAAK,EAAEG,IAAI,CAACH;AAFH,KAAD,CAAV;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,GAND;;AASA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACA;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAEZ,SAAjB;AAA4B,cAAA,YAAY,EAAEC,YAA1C;AAAwD,cAAA,MAAM,EAAEC,MAAhE;AAAwE,cAAA,SAAS,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,MAAM,EAAED,MAApB;AAA4B,cAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAET;AAAnC;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEe;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/CQV,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport SkillsList from './Components/SkillsList';\nimport Logins from './Components/Logins';\nimport Registration from './Components/Registration';\n\n\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\n\n\n\n\nfunction App() {\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [session, setSession] = useState({auth: false, token:\"\"})\n\n  const { isLoggedIn } = session\n  const { token } = session\n\n  // Refer to react docs for conditional learning\n\n  // call-back function for Logins component\n  const userAuth = (data) => {\n    setSession({\n      auth:true,\n      token: data.token\n    })\n    console.log('User logged in successfully!')\n  }\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        \n        <Switch>\n        \n          <Route path='/' exact>\n          <div className='app-container'>\n          <h1 className='app-name'>Level Up App</h1>\n            <Form inputText={inputText} setInputText={setInputText} skills={skills} setSkills={setSkills} />\n            <SkillsList skills={skills} setSkills={setSkills} />\n          </div>\n          </Route>\n          <Route path='/register' component={Registration} />\n          <Route path='/login'>\n            <Logins userAuth={userAuth} />\n          </Route>\n            \n          \n        </Switch>\n        \n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}